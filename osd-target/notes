#vim : ft=cfg

IMPORTANT
append
create
create and write
create collection
create partition
read
read buffer
write
write buffer
list
list collection
format osd
get attributes
set attributes
remove
remove collection
remove partition
report luns
set key
set master key

inquiry
flush
flush collection
flush osd
flush partition
receive diagnostic results
report supported operation codes


NOT IMPLEMENTED/OPTIONAL
log select
log sense
mode select
mode sense
perform scsi command
perform task management function
persistent reserve in
persistent reserve out
prevent allow medium removal
report supported task management functions
report target port groups
request sense
send diagnostic
set target port groups
test unit ready

directory pages
quotas

========================================
root object
	partition
		collection
		object
		or any osd object type


questions:
-	how to create osd? flat file? what will be blocks?
-	how is collection populated?
-	where will be attributes stored for an object?
-	

design:
	root directory for the root object
	each partition is a directory within the root directory
	objects are stored within the partition
	collection objects are stored within the directory

db requirements:
	get all attr for an oid
	get all attr for an oid in an attr page
	get an attr for an oid on an attr page
	set an attr on oid on an attr page
	for an oid check for duplicate attr numbers
	check for duplicate attr pages across attr types

solution:
	use one db file per object storing is attr
	don't allow attribute pages beyond F000 0000h
	restrict attribute pages in range as specified in p22
	get all attr using db cursor
	use environment to store database of multiple objects



# Wed Dec  6 11:54:17 EST 2006
What is the meaning of the following (p21):

With the exception of attributes pages in the attributes page number range
assigned to any OSD object types, the same attributes page shall not be
associated with more than one OSD object type.

Two object types cannot share same page number but two objects can.

#if 0 /* > 3.8.8 of sqlite */
	ret = sqlite3_extended_result_codes(dbp, 1);
	if (ret != SQLITE_OK) {
		fprintf(stderr, "SQL ERROR: %s\n", sqlite3_errmsg(dbp));
		return -1;
	}
#endif

# Mon Jan 22 12:15:56 EST 2007
prepare functions for most used sql stmt. look at reset, since bound var
still retain their values.
get_all_attr in a page
move create partition to obfs.c
remove delete object code from attr
rename attr-* to attr.c
change uint64_t to use typedefs
mv db code to db.c
mv tab code to obj.c and attr.c
mv obfs to osd
rm init_attr, use attr_t with len = 0;
clean finalize code

-	p23, attr number FFFFFFFFh gets all attr for a page
-	p23, p87, p112: No explicit call to delete an object's attribute. only
	thing possible is to set an attribute's length to 0. Since only
	attributes with non-zero length can be retrieved.

# Tue Jan 23 11:59:47 EST 2007
remove attr_insert and attr_delete. 
change set_attr properly
obj: insert, delete works
attr: 
	set_attr -> check if attr exists, if so update else insert it
	get_attr -> select attr, if empty EEMPTY
	delete_attr -> delete all attr for object
	get_attr_page -> get all attr in a page

define return values, we return same return values as sqlite or should
we assume this is single threaded app => no table locking, no checking for
EBUSY. in future keep sqlite3_step in a infinite loop

# Fri Jan 26 11:03:52 EST 2007
+	single makefile for tests and libosd
-	make rules for dependencies
+	defines for ROOT_OBJECT, ROOT_PARTITION
+	change obj tab, include type of object being created

# Mon Jan 29 12:39:02 EST 2007
-	what is current commands attr page
-	sense_* functions are not up to date. osd_* are not returning correct
	values.
-	collect all errors using goto

# Tue Jan 30 16:12:47 EST 2007
schema changes. attr table need to have directory pages. rows need to have
writable flags to prevent certain directory pages to be modified. directories
can be implemented as a sql view on page numbers 0

# Wed Jan 31 14:26:19 EST 2007
+	need sense.c which builds sense, since both cdb and osd want to construct
	sense.

# Thu Feb  1 14:53:38 EST 2007
+	implement error_fatal as a separate function.

# Fri Feb  9 16:09:55 EST 2007
+	create partition
+	set partition attr as separate osd function
+	set root attr as separate function.

# Mon Feb 12 11:48:43 EST 2007
-	implement cache: hold a struct with latest oid, pid for collections or 
	objects.
-	implement list on root object
!	current command attributes page is responsible for returning the results
	back to initiator: eg. assigned pid, oid etc.
-	set initial attributes on every object when it is created
+	mv initial_populate into osd.c
!	get_next* funcs assume monotonic increase in ids, resulting in holes
+	implement remove partition
+	new oid should start from USEROBJECT_OID_LB and pid from PARTITION_PID_LB
?	how are contents within attr page returned?
		retrieved attributes returned in list format: Section 7.1.3.[2,3]

# Tue Feb 13 11:50:23 EST 2007
-	rather than hardcoding test cases within tests, change test scaffold to
	test each osd function. Modify tests to take arguments, build cases
	accordingly.
+	devise a clean way to assign values to pointers within struct
-	stale values of ccap

# Wed Feb 14 11:41:45 EST 2007
+	osd specific return codes, 
-	db, obj and attr specific return codes
+	mv error_sql into db.c
?	what happens on removal of non existent obj
		sqlite successfully complete removal of non existent object
+	gettype func in obj.c
+	make depend targets

# Mon Feb 19 13:08:31 EST 2007
+	use gettype in obj disambiguation
+	fix fret/ret bugs
+	fix attr_get_* bugs
+	fix test codes with asserts
-	test different format scenarios
-	replace magic numbers with descriptive codes
+	change valid page to is settable
-	page format Sec 7, 

# Tue Feb 20 15:34:32 EST 2007
+	get size, atime, mtime attr
+	write get page for timestamps

# Fri Feb 23 15:07:22 EST 2007
-	include root info page struct in osd_device
-	osd error precision ??
-	append
+	split get_attr in cdb.c, handle command ordering, write test cases
+	parse list
-	separate function to handle each command in cdb

# Wed Feb 28 12:30:56 EST 2007
+	break each into individual functions
+	change embeded to true/false
-	replace magic numbers in calculating cdb offset 
+	test cases for cdb
+	get_attr_page needs to be changes to get pages like ccap. to get all
	contents of a page, another command has to be added
-	ntoh* functions need to be properly aligned
+	attr_page values are aligned to 8-byte boundary

# Thu Mar  1 13:03:27 EST 2007
-	design and implement collections
-	test blob modifications
-	collections as a chunk of memory representing array of oids/cids
-	collections containing objects across partitions?
-	design with quota in pic
+	add attribute list header
+	clean interface for getting multiple attributes
+	for create with > 1 objects:
		set attr value, set attr list: attr for each object will be set
		get attr list: attr for each object in attr list of type 0xF.
		get attr page: ?
+	new function: osd_getattr_page
-	move page related osd funcs to a new file

# Fri Mar  2 11:19:42 EST 2007
+	conflicting goals:
	one function to pack attributes, but that requires double copies? how to
	solve this?
+	while getting attr in list, in case of overflow, dont overwrite/ignore
	copied attrs
-	ispresent_attr, ispresent_attrpage functions
-	null attributes page for page not found. for non existing attribute, list
	entry format with len == 0xFFFFFFFF 
-	optimize sql query setup
+	change ATTR_VAL_OFFSET to VAL_OFFSET(x)
-	creating a new page, automatically creates page 0. 
-	page directory related functions
+	get_all_attr for object function
+	let attr_gather_attr returns EOVERFLOW, but attr is absent, what will be
	returned in that case? 
		it will not be treated as an error
+	mark all sematic decisions as XXX:SD

# Sun Mar  4 14:56:45 EST 2007
-	separate return for sqlite calls in attr_get_attr
+	rename RTRVD_CREATE_ATTR_LIST  RTRVD_CREATE_MUTIOBJ_LIST
-	if setattr with length zero, don't delete it, since that attr still has
	definition. this situation is different from where attr has no definition
	XXX:SD modifiy query.
-	after opening db, check if all tables exist
-	cdb tests, tests for new osd-functions

# Mon Mar  5 16:42:31 EST 2007
+	directory page: sql query to generate a directory page
+	get attribute list length in 5.2.2.3, is list length in bytes
-	still to test getpage_setvalue, setvalue part in cdb.c
-	implement sense to report the stage where command failed.

# Tue Mar  6 13:08:16 EST 2007
-	outdata/indata notation different from spec XXX:SD
-	use stranded files to mv existing dfiles when creating dfiles

# Wed Mar  7 12:43:35 EST 2007
-	handle access to directory page offset
!	align Malloc and Calloc  to 8B
	cannot handle this, as it would need bookkeeping
-	refactor attr.c 
+	in dir page add by default for each object UTSAP.
-	sqlite truncates strings with  ??

# Thu Mar  8 17:11:29 EST 2007
-	reduce number of arguments for : getattr, setattr
+	collect all INCITS strings 
-	use flexible array at end of struct for le mle

# Fri Mar  9 12:00:46 EST 2007
-	change return values of db.c and attr.c from SQLITE return to OSD return
	codes
+	add pragma 

# Wed Mar 14 17:07:06 EDT 2007
-	standardize goto labels

# Wed Apr  4 18:23:26 EDT 2007
-	rewrite makefiles like pvfs, look at the paper
