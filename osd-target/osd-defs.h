/*
 * The osd commands.  And other stuff that should perhaps go elsewhere.
 */

/* varlen cdb service actions for OSD-2 (before SNIA changes 17 jan 07) */
#define OSD_APPEND			0x8807
#define OSD_CREATE			0x8802
#define OSD_CREATE_AND_WRITE		0x8812
#define OSD_CREATE_COLLECTION		0x8815
#define OSD_CREATE_PARTITION		0x880b
#define OSD_FLUSH			0x8808
#define OSD_FLUSH_COLLECTION		0x881a
#define OSD_FLUSH_OSD			0x881c
#define OSD_FLUSH_PARTITION		0x881b
#define OSD_FORMAT_OSD			0x8801
#define OSD_GET_ATTRIBUTES		0x880e
#define OSD_GET_MEMBER_ATTRIBUTES	0x8822
#define OSD_LIST			0x8803
#define OSD_LIST_COLLECTION		0x8817
#define OSD_PERFORM_SCSI_COMMAND	0x8f7e
#define OSD_PERFORM_TASK_MGMT_FUNC	0x8f7f
#define OSD_QUERY			0x8820
#define OSD_READ			0x8805
#define OSD_REMOVE			0x880a
#define OSD_REMOVE_COLLECTION		0x8816
#define OSD_REMOVE_MEMBER_OBJECTS	0x8821
#define OSD_REMOVE_PARTITION		0x880c
#define OSD_SET_ATTRIBUTES		0x880f
#define OSD_SET_KEY			0x8818
#define OSD_SET_MASTER_KEY		0x8819
#define OSD_SET_MEMBER_ATTRIBUTES	0x8823
#define OSD_WRITE			0x8806

#define SAM_STAT_GOOD            0x00
#define SAM_STAT_CHECK_CONDITION 0x02
#define SAM_STAT_CONDITION_MET   0x04
#define SAM_STAT_BUSY            0x08
#define SAM_STAT_INTERMEDIATE    0x10
#define SAM_STAT_INTERMEDIATE_CONDITION_MET 0x14
#define SAM_STAT_RESERVATION_CONFLICT 0x18
#define SAM_STAT_COMMAND_TERMINATED 0x22
#define SAM_STAT_TASK_SET_FULL   0x28
#define SAM_STAT_ACA_ACTIVE      0x30
#define SAM_STAT_TASK_ABORTED    0x40

/* object types */
#define ROOT_PID (0LLU)
#define ROOT_OID (0LLU)
#define PARTITION_PID_LB (0x10000LLU)
#define PARTITION_OID (0x0LLU)
#define OBJECT_PID_LB (0x10000LLU)
#define USEROBJECT_PID_LB OBJECT_PID_LB
#define COLLECTION_PID_LB OBJECT_PID_LB
#define OBJECT_OID_LB OBJECT_PID_LB
#define COLLECTION_OID_LB COLLECTION_PID_LB
#define USEROBJECT_OID_LB USEROBJECT_PID_LB

enum {
	ROOT = 1,
	PARTITION,
	COLLECTION,
	USEROBJECT
};

/* osd2r00 Section 4.7.3 */
enum {
	USEROBJECT_PG = 0,
	PARTITION_PG  = 0x30000000,
	COLLECTION_PG = 0x60000000,
	ROOT_PG       = 0x90000000,
	RESERVED_PG   = 0xC0000000,
	ANY_PG        = 0xF0000000,
	GETALLATTR_PG = 0xFFFFFFFF
};

/* osd2r00, Table 4, Section 4.7.3 */
enum {
	VALID_PG_LB = 0x10000,
	VALID_PG_UB = 0x1FFFFFFF
};

/* osd2r00 Section 4.7.3 */
enum {
	USEROBJECT_PG_LB = USEROBJECT_PG + VALID_PG_LB,
	USEROBJECT_PG_UB = USEROBJECT_PG + VALID_PG_UB,       
	PARTITION_PG_LB = PARTITION_PG + VALID_PG_LB,  
	PARTITION_PG_UB  = PARTITION_PG + VALID_PG_UB,  
	COLLECTION_PG_LB = COLLECTION_PG + VALID_PG_LB, 
	COLLECTION_PG_UB = COLLECTION_PG + VALID_PG_UB, 
	ROOT_PG_LB = ROOT_PG + VALID_PG_LB,       
	ROOT_PG_UB = ROOT_PG + VALID_PG_UB,
	ANY_PG_UB = ANY_PG + (0xFFFFFFFE)
};
	
/* osd2r00, Section 4.7.4 */
enum {
	ATTRNUM_LB = 0x0,
	ATTRNUM_UB = 0xFFFFFFFE,
	ATTRNUM_INFO = ATTRNUM_LB,
	ATTRNUM_UNMODIFIABLE = 0xFFFFFFFF
};

/* osd2r00, Table 5 Section 4.7.5 */
enum {
	USEROBJECT_DIR_PG = (USEROBJECT_PG + 0x0),
	PARTITION_DIR_PG = (PARTITION_PG + 0x0),
	COLLECTION_DIR_PG = (COLLECTION_PG + 0x0),
	ROOT_DIR_PG = (ROOT_PG + 0x0)
};

