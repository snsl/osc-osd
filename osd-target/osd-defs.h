#ifndef __OSD_DEFS_H
#define __OSD_DEFS_H

#include <stdint.h>

/*
 * The osd commands.  And other stuff that should perhaps go elsewhere.
 */

/* varlen cdb service actions for OSD-2 (before SNIA changes 17 jan 07) */
#define OSD_APPEND			0x8807
#define OSD_CREATE			0x8802
#define OSD_CREATE_AND_WRITE		0x8812
#define OSD_CREATE_COLLECTION		0x8815
#define OSD_CREATE_PARTITION		0x880b
#define OSD_FLUSH			0x8808
#define OSD_FLUSH_COLLECTION		0x881a
#define OSD_FLUSH_OSD			0x881c
#define OSD_FLUSH_PARTITION		0x881b
#define OSD_FORMAT_OSD			0x8801
#define OSD_GET_ATTRIBUTES		0x880e
#define OSD_GET_MEMBER_ATTRIBUTES	0x8822
#define OSD_LIST			0x8803
#define OSD_LIST_COLLECTION		0x8817
#define OSD_PERFORM_SCSI_COMMAND	0x8f7e
#define OSD_PERFORM_TASK_MGMT_FUNC	0x8f7f
#define OSD_QUERY			0x8820
#define OSD_READ			0x8805
#define OSD_REMOVE			0x880a
#define OSD_REMOVE_COLLECTION		0x8816
#define OSD_REMOVE_MEMBER_OBJECTS	0x8821
#define OSD_REMOVE_PARTITION		0x880c
#define OSD_SET_ATTRIBUTES		0x880f
#define OSD_SET_KEY			0x8818
#define OSD_SET_MASTER_KEY		0x8819
#define OSD_SET_MEMBER_ATTRIBUTES	0x8823
#define OSD_WRITE			0x8806

#define SAM_STAT_GOOD            0x00
#define SAM_STAT_CHECK_CONDITION 0x02
#define SAM_STAT_CONDITION_MET   0x04
#define SAM_STAT_BUSY            0x08
#define SAM_STAT_INTERMEDIATE    0x10
#define SAM_STAT_INTERMEDIATE_CONDITION_MET 0x14
#define SAM_STAT_RESERVATION_CONFLICT 0x18
#define SAM_STAT_COMMAND_TERMINATED 0x22
#define SAM_STAT_TASK_SET_FULL   0x28
#define SAM_STAT_ACA_ACTIVE      0x30
#define SAM_STAT_TASK_ABORTED    0x40

/* OSD object constants, osd2r00 Sec 4.6.2 tab 2 */
#define ROOT_PID (0LLU)
#define ROOT_OID (0LLU)
#define PARTITION_PID_LB (0x10000LLU)
#define PARTITION_OID (0x0LLU)
#define OBJECT_PID_LB (0x10000LLU)
#define USEROBJECT_PID_LB OBJECT_PID_LB
#define COLLECTION_PID_LB OBJECT_PID_LB
#define OBJECT_OID_LB OBJECT_PID_LB
#define COLLECTION_OID_LB COLLECTION_PID_LB
#define USEROBJECT_OID_LB USEROBJECT_PID_LB

/* object types, osd2r00 Section 4.9.2.2.1 table 9 */
enum {
	ROOT = 0x01,
	PARTITION = 0x02,
	COLLECTION = 0x40,
	USEROBJECT = 0x80,
	ILLEGAL_OBJ = 0x00 /* XXX: this is not in standard */
};

/* osd2r00, Section 4.7.3, tab 3 */
enum {
	USEROBJECT_PG = 0x0U,
	PARTITION_PG  = 0x30000000U,
	COLLECTION_PG = 0x60000000U,
	ROOT_PG       = 0x90000000U,
	RESERVED_PG   = 0xC0000000U,
	ANY_PG        = 0xF0000000U,
	CUR_CMD_ATTR_PG = 0xFFFFFFFEU,
	GETALLATTR_PG = 0xFFFFFFFFU
};

/* osd2r00, tab 4, Section 4.7.3 */
enum {
	STD_PG_LB = 0x0,
	STD_PG_UB = 0x7F,
	RSRV_PG_LB = 0x80,
	RSRV_PG_UB = 0x7FFF,
	OSTD_PG_LB = 0x8000,
	OSTD_PG_UB = 0xEFFF,
	MSPC_PG_LB = 0xF000,
	MSPC_PG_UB = 0xFFFF,
	LUN_PG_LB = 0x10000,
	LUN_PG_UB = 0x1FFFFFFF,
	VEND_PG_LB = 0x20000000,
	VEND_PG_UB = 0x2FFFFFFF
};
	
/* osd2r00, Section 4.7.4 */
enum {
	ATTRNUM_LB = 0x0,
	ATTRNUM_UB = 0xFFFFFFFE,
	ATTRNUM_INFO = ATTRNUM_LB,
	ATTRNUM_UNMODIFIABLE = 0xFFFFFFFF
};

/* osd2r00, Table 5 Section 4.7.5 */
enum {
	USEROBJECT_DIR_PG = (USEROBJECT_PG + 0x0),
	PARTITION_DIR_PG = (PARTITION_PG + 0x0),
	COLLECTION_DIR_PG = (COLLECTION_PG + 0x0),
	ROOT_DIR_PG = (ROOT_PG + 0x0)
};

/* osd2r00 sec 7.1.2.1 tab 85 */
enum {
	USER_DIR_PG = 0x0,
	USER_INFO_PG,
	USER_QUOTA_PG,
	USER_TS_PG
};

/* Current command attributes page constants, osd2r00 Sec 7.1.2.24 tab 124 */
enum {
	CCAP_PAGEID_OFF = 0,
	CCAP_LEN_OFF = 4,
	CCAP_RICV_OFF = 8,
	CCAP_OBJT_OFF = 28,
	CCAP_PID_OFF = 32,
	CCAP_OID_OFF = 40,
	CCAP_APPADDR_OFF = 48,
	CCAP_RICV_LEN = 20,
	CCAP_LEN = 48, /* 0x30 */
	CCAP_TOTAL_LEN = 56
};

/* userobject timestamp attribute page osd2r00 sec 7.1.2.18 tab 109 */
enum {
	UTSAP_PAGE_OFF = 0,
	UTSAP_LEN_OFF = 4,
	UTSAP_CTIME_OFF = 8,
	UTSAP_ATTR_ATIME_OFF = 14,
	UTSAP_ATTR_MTIME_OFF = 20,
	UTSAP_DATA_ATIME_OFF = 26,
	UTSAP_DATA_MTIME_OFF = 32,
	UTSAP_TIME_SZ = 6,
	UTSAP_LEN = 30,
	UTSAP_TOTAL_LEN = 38
};

/* userobject information attribute page osd2r00 sec 7.1.2.11 tab 94 */
enum {
	UIAP_PAGEID = 0x0,
	UIAP_PID,
	UIAP_OID,
	UIAP_USERNAME = 0x9,
	UIAP_USED_CAP = 0x81,
	UIAP_LGCL_LEN = 0x82,
	UIAP_PAGEID_SZ = 40,
	UIAP_USED_CAP_SZ = 8,
	UIAP_LGCL_LEN_SZ = 8,
	UIAP_PID_SZ = sizeof(uint64_t),
	UIAP_OID_SZ = sizeof(uint64_t)
};

enum {
	FALSE = 0,
	TRUE = 1
};

enum {
	OSD_ERROR = -1,
	OSD_OK = 0
};

enum {
	EMBEDDED = 1,
	STANDALONE = 2
};

#endif /* __OSD_DEFS_H */
