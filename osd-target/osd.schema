--
-- schema for OSD using sqlite3
--

-- 4.6.2: The combination of partition ID and user object ID uniquely
-- identifies the root obect, each partition, each collection, and each
-- user object.  Thus we store everything in this one table.
CREATE TABLE obj (
	pid INTEGER NOT NULL,
	oid INTEGER NOT NULL,
	type INTEGER NOT NULL,
	PRIMARY KEY (pid, oid)
);

CREATE TABLE attr (
	pid INTEGER NOT NULL,
	oid INTEGER NOT NULL,
	page INTEGER NOT NULL,
	number INTEGER NOT NULL,
	value BLOB,
	PRIMARY KEY (pid, oid, page, number)
);

-- object_collection table is used as an intersection table to hold
-- many-to-many mappings between userobjects and collections.
CREATE TABLE coll (
	pid INTEGER NOT NULL,
	cid INTEGER NOT NULL,
	oid INTEGER NOT NULL,
	number INTEGER NOT NULL,
	PRIMARY KEY (pid, cid, oid)
);

-- Add index on most varying fields for performance
-- CREATE INDEX obj_ind ON obj (pid,oid);
-- CREATE INDEX attr_ind ON attr (pid,oid,page,number);
-- CREATE INDEX pgnum_ind ON attr (page,number);
-- CREATE INDEX type_ind ON obj (type);

-- index on value helps OSD_QUERY 
CREATE INDEX val_ind ON attr (value);

-- this index help get_dir_page query, but might slow down set_attr
-- CREATE INDEX num_ind ON attr (pid,oid,number);

