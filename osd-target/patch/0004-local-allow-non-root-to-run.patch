From 0fa4419f0fb46d51329ebc0809f854ed2ca2b0e3 Mon Sep 17 00:00:00 2001
From: Pete Wyckoff <pw@osc.edu>
Date: Tue, 16 Oct 2007 15:21:32 -0400
Subject: [PATCH 4/7] local allow non root to run

Modify so that IPC matches credentials rather than requiring root.
Do not try to adjust oom-killer if non root.  Also die on signal rather
than catch and continue.
---
 usr/mgmt.c |    2 +-
 usr/tgtd.c |   17 +++++++++++++----
 2 files changed, 14 insertions(+), 5 deletions(-)

diff --git a/usr/mgmt.c b/usr/mgmt.c
index e54d83e..b4a4829 100644
--- a/usr/mgmt.c
+++ b/usr/mgmt.c
@@ -351,7 +351,7 @@ static int ipc_perm(int fd)
 		return -1;
 	}
 
-	if (cred.uid || cred.gid)
+	if (cred.uid != geteuid() || cred.gid != getegid())
 		return -EPERM;
 
 	return 0;
diff --git a/usr/tgtd.c b/usr/tgtd.c
index 5fcded0..238551d 100644
--- a/usr/tgtd.c
+++ b/usr/tgtd.c
@@ -84,7 +84,12 @@ Target framework daemon.\n\
 	exit(status);
 }
 
-static void signal_catch(int signo) {
+static int stop_daemon;
+
+static void signal_catch(int signo)
+{
+	log_error("caught signal %d, exiting\n", signo);
+	stop_daemon = 1;
 }
 
 static int oom_adjust(void)
@@ -92,7 +97,10 @@ static int oom_adjust(void)
 	int fd, err;
 	char path[64];
 
-	/* Avoid oom-killer */
+	/* Avoid oom-killer, only if root */
+	if (getuid() != 0)
+		return 0;
+
 	sprintf(path, "/proc/%d/oom_adj", getpid());
 	fd = open(path, O_WRONLY);
 	if (fd < 0) {
@@ -253,7 +261,8 @@ retry:
 	} else
 		schedule();
 
-	goto retry;
+	if (!stop_daemon)
+		goto retry;
 }
 
 static int lld_init(int *use_kernel, char *args)
@@ -329,7 +338,7 @@ int main(int argc, char **argv)
 		exit(1);
 	}
 
-	if (is_daemon && daemon(0,0))
+	if (is_daemon && daemon(1, 1))
 		exit(1);
 
 	err = oom_adjust();
-- 
1.5.3.6

