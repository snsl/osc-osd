#
# Build python shared library from osd initiator sources, using Pyrex.
#
# 1.  The .h file is used to list the required C headers, this is converted
#     by a hairy script (extract.py) into declarations that can be read by
#     Pyrex.
#
# 2.  The .pyx uses a python-like language to make wrappers around the C
#     functions.  It is converted to C using pyrexc.
#
# 3.  The resulting C is compiled, and linked with the original C libraries
#     into a shared object that python can load.
#

# edit these files
PYXSRC := libosdpython.pyx
INC := libosdpython.h

# outputs generated by make
GENSRC := libosdpython.c
GENOBJ := libosdpython.o
GENPXD := libosdpython.pxd
LIB := libosdpython.so

# external libraries being wrapped for python
OSDLIBS := ../libosd.a ../../util/libosdutil.a

# usual definitions
CC := gcc
CPP_M := -MM -MT $(GENPXD)
LD := $(CC)
COPTS := -g -fPIC
CWARN := -Wall -Wno-unused -W -Wno-missing-field-initializers \
         -Wpointer-arith -Wcast-align -Wcast-qual \
	 -Wbad-function-cast -Wundef -Wmissing-prototypes -Wstrict-prototypes \
	 -Wmissing-declarations -Wnested-externs
CFLAGS := $(COPTS) $(CWARN) -I/usr/include/python2.4 -I../..

all:: $(LIB)

libosdpython.so: libosdpython.o $(OSDLIBS)
	gcc -shared -o $@ $^

%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

libosdpython.c: libosdpython.pyx libosdpython.pxd
	pyrexc -o $@ $<

libosdpython.pxd: libosdpython.h
	python ./extract.py $< > $@

ifeq (,$(filter clean distclean dist,$(MAKECMDGOALS)))
-include .depend
endif
all:: .depend
.depend: $(INC) Makefile
	@$(CC) $(CPP_M) $(CFLAGS) $(INC) > .depend

clean:
	rm -f $(GENSRC) $(GENOBJ) $(GENPXD) $(LIB)
	rm -f .depend tags

# the ignore does not quite work, so class names are not in the tags file
tags: FORCE
	ctags --langmap=python:.pyx -I cdef --extra=+f $(PYXSRC)

FORCE:;

